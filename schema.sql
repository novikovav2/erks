CREATE TABLE  "DEVICE_TYPES" 
   (	"ID" NUMBER, 
	"TYPE" VARCHAR2(300) NOT NULL ENABLE, 
	 CONSTRAINT "DEVICE_TYPES_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "DEVICE_TYPES_UK1" UNIQUE ("TYPE")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LOCATIONS" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(100) NOT NULL ENABLE, 
	"ADDRESS" VARCHAR2(300), 
	 CONSTRAINT "LOCATIONS_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "LOCATIONS_NAME_UK1" UNIQUE ("NAME")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "DEVICES" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(100), 
	"TYPE_ID" NUMBER, 
	"LOCATION_ID" NUMBER, 
	 CONSTRAINT "DEVICES_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "CHANNELS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(200) NOT NULL ENABLE, 
	"NUM" VARCHAR2(50), 
	"TYPE" NUMBER, 
	 CONSTRAINT "CHANNELS_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "CHANNELS_DEVICES" 
   (	"CHANNEL_ID" NUMBER NOT NULL ENABLE, 
	"DEVICE_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "CH_DEV_MULTIPLE_UNIQUE" UNIQUE ("CHANNEL_ID", "DEVICE_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LINES" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(300), 
	"NUM_ORDER" VARCHAR2(50), 
	"LINE_SIZE" VARCHAR2(50), 
	"PROVIDER" VARCHAR2(50), 
	 CONSTRAINT "LINES_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "CHANNELS_LINES" 
   (	"CHANNEL_ID" NUMBER NOT NULL ENABLE, 
	"LINE_ID" NUMBER NOT NULL ENABLE
   )
/
CREATE TABLE  "USERS" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"LOGIN" VARCHAR2(50) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(50), 
	"ADMIN" NUMBER DEFAULT 0, 
	 CONSTRAINT "USERS_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "USERS_LOGIN_UK1" UNIQUE ("LOGIN")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "DEVICES" ADD CONSTRAINT "DEVICES_TYPE_FK" FOREIGN KEY ("TYPE_ID")
	  REFERENCES  "DEVICE_TYPES" ("ID") ENABLE
/
ALTER TABLE  "DEVICES" ADD CONSTRAINT "DEVICES_LOCATIONS_FK" FOREIGN KEY ("LOCATION_ID")
	  REFERENCES  "LOCATIONS" ("ID") ENABLE
/
ALTER TABLE  "CHANNELS_DEVICES" ADD CONSTRAINT "CHANNELS_DEVICES_FK" FOREIGN KEY ("CHANNEL_ID")
	  REFERENCES  "CHANNELS" ("ID") ENABLE
/
ALTER TABLE  "CHANNELS_LINES" ADD CONSTRAINT "CHANNELS_LINES_FK" FOREIGN KEY ("CHANNEL_ID")
	  REFERENCES  "CHANNELS" ("ID") ENABLE
/
ALTER TABLE  "CHANNELS_LINES" ADD CONSTRAINT "CHANNELS_LINES_FK2" FOREIGN KEY ("LINE_ID")
	  REFERENCES  "LINES" ("ID") ENABLE
/
ALTER TABLE  "CHANNELS_DEVICES" ADD CONSTRAINT "CHANNELS_DEVICES_CON" FOREIGN KEY ("DEVICE_ID")
	  REFERENCES  "DEVICES" ("ID") ENABLE
/
CREATE INDEX  "CHANNELS_DEVICES_IDX1" ON  "CHANNELS_DEVICES" ("CHANNEL_ID")
/
CREATE INDEX  "CHANNELS_DEVICES_IDX2" ON  "CHANNELS_DEVICES" ("DEVICE_ID")
/
CREATE UNIQUE INDEX  "CHANNELS_LINES_IDX1" ON  "CHANNELS_LINES" ("CHANNEL_ID", "LINE_ID")
/
CREATE INDEX  "CHANNELS_LINES_IDX2" ON  "CHANNELS_LINES" ("CHANNEL_ID")
/
CREATE INDEX  "CHANNELS_LINES_IDX3" ON  "CHANNELS_LINES" ("LINE_ID")
/
CREATE INDEX  "USERS_ADMIN_IDX1" ON  "USERS" ("ADMIN")
/
 CREATE SEQUENCE   "LOCATIONS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "DEVICE_TYPES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "DEVICES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "LINES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "CHANNELS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "USERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_CHANNELS" 
  before insert on "CHANNELS"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "CHANNELS_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_CHANNELS" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_DEVICES" 
  before insert on "DEVICES"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "DEVICES_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_DEVICES" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_DEVICE_TYPES" 
  before insert on "DEVICE_TYPES"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "DEVICE_TYPES_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_DEVICE_TYPES" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_LINES" 
  before insert on "LINES"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "LINES_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_LINES" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_LOCATIONS" 
  before insert on "LOCATIONS"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "LOCATIONS_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_LOCATIONS" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_USERS" 
  before insert on "USERS"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "USERS_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_USERS" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "USERS_PASSWORD_HASH_TR" 
BEFORE insert or update on USERS
for each row
declare
pass_hash varchar2(50);
begin
select ORA_HASH(:NEW.PASSWORD) INTO pass_hash from dual;
:NEW.PASSWORD := pass_hash;
end;

/
ALTER TRIGGER  "USERS_PASSWORD_HASH_TR" ENABLE
/
